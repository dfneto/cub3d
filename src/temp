typedef struct s_texture
{
	t_img	*north;
	t_img	*south;
	t_img	*west;
	t_img	*east;
	int		floor;
	int		ceiling;
}	t_texture;


//textures
t_img	*loadTexture(void *mlx, char *file_path, int *width, int *height);
void    color_floor(t_data *data, unsigned int buffer[HEIGHT][WIDTH], int drawStart, int x);
void    color_ceiling(t_data *data, unsigned int buffer[HEIGHT][WIDTH], int drawEnd, int x);


//TODO: acho que não é necessário malloc
void    init_texture(t_data *data)
{
    int width, height;
    t_texture   *textures;

    textures = (t_texture *)malloc(sizeof(t_texture));
    // data->textures = (t_texture *)malloc(sizeof(t_texture));
    textures->north = loadTexture(data->mlx_ptr, "textures/north.xpm", &width, &height);
    textures->south = loadTexture(data->mlx_ptr, "textures/south.xpm", &width, &height);
    textures->east = loadTexture(data->mlx_ptr, "textures/east.xpm", &width, &height);
    textures->west = loadTexture(data->mlx_ptr, "textures/west.xpm", &width, &height);
    textures->floor = get_rgb(225,30,0);
    textures->ceiling = get_rgb(25,30,233);
    data->textures = textures;
}